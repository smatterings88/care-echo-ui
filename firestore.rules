rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read their own data, admins can read/write all, managers can read users from their assigned agencies
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager' && 
         resource.data.agencyId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.agencyIds)
      );

      // Allow create by admins, and by managers only for regular users within their assigned agencies
      allow create: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager' &&
          request.resource.data.role == 'user' &&
          request.resource.data.agencyId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.agencyIds
        )
      );

      // Allow updates/deletes by the user themselves or admins
      allow update, delete: if request.auth != null && (
        request.auth.uid == userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // Agencies collection - admins can read/write, agency users can read their agency, managers can read their assigned agencies
    match /agencies/{agencyId} {
      allow read: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agency' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.agencyId == agencyId ||
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager' && 
         agencyId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.agencyIds)
      );
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Surveys collection - users can create their own surveys, read their own and agency surveys
    match /surveys/{surveyId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agency' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager' ||
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.agencyId == resource.data.agencyId) ||
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager' && 
         resource.data.agencyId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.agencyIds)
      );
      allow create: if request.auth != null && (
        request.auth.uid == request.resource.data.userId
      );
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // Default - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
